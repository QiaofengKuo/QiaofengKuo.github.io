[{"name":"数据结构与算法","label":{},"itemStyle":{},"children":[{"name":"引入概念","value":10101,"label":{},"itemStyle":{},"collapsed":null,"children":[{"name":"算法引入"},{"name":"时间复杂度与大0表示法"},{"name":"最坏时间复杂度与计算规则"},{"name":"常见时间复杂度与大小关系"},{"name":"代码执行时间测量模块"},{"name":"Python列表类型不同操作的时间效率"},{"name":"Python列表与字典操作的时间复杂度"},{"name":"数据结构引入"}]},{"name":"顺序表","children":[{"name":"内存、类型本质、连续存储"},{"name":"基本顺序表与元素外围顺序表"},{"name":"顺序表的一体式结构与分离式结构"},{"name":"顺序表数据区替换与扩充"}]},{"name":"栈","children":[{"name":"栈与队列的概念"},{"name":"栈的实现"},{"name":"队列与双端队列的实现"}]},{"name":"链表","children":[{"name":"链表的提出"},{"name":"单链表的ADT模型"},{"name":"Python中变量标识的本质"},{"name":"单链表及结点的定义代码"},{"name":"链表的判空、长度、遍历与尾部添加结点的代码实现"},{"name":"单链表尾部添加和在指定位置添加"},{"name":"单链表查找和删除元素"},{"name":"单链表与顺序表的对比"},{"name":"单向循环链表遍历和求长度"},{"name":"单向循环链表添加元素"},{"name":"单向循环链表删除元素"},{"name":"单向循环链表删除元素复习及链表扩展"},{"name":"双向链表及添加元素"},{"name":"双向链表删除元素"}]},{"name":"排序与搜索","children":[{"name":"排序算法的稳定性"},{"name":"冒泡排序及实现"},{"name":"选择排序算法及实现"},{"name":"插入算法"},{"name":"插入排序"},{"name":"插入排序2"},{"name":"希尔排序"},{"name":"快速排序"},{"name":"快速排序实现1"},{"name":"快速排序实现2"},{"name":"归并排序"},{"name":"归并排序 代码执行流程"},{"name":"归并排序时间复杂度及排序算法复杂度对比"},{"name":"二分查找"},{"name":"二分查找时间复杂度"}]},{"name":"树和树的算法","children":[{"name":"树的概念"},{"name":"二叉树的概念"},{"name":"二叉树的广度优先遍历"},{"name":"二叉树的实现"},{"name":"二叉树的先序、中序、后序遍历"},{"name":"二叉树由遍历确定一棵树"}]}]}]